using System.Collections.Generic;
using System.ComponentModel;

namespace Dapper.FastCrud.Mappings
{
    /// <summary>
    ///     Discovers the orm mapping for a particular entity type.
    /// </summary>
    internal class AutoGeneratedEntityMapping<TEntity> : EntityMapping<TEntity>
    {
        /// <summary>
        ///     Default constructor.
        /// </summary>
        public AutoGeneratedEntityMapping()
        {
            var currentConventions = OrmConfiguration.Conventions;

            var tableName = currentConventions.GetTableName(EntityType);
            SetTableName(tableName);

            var schemaName = currentConventions.GetSchemaName(EntityType);
            {
                if (!string.IsNullOrEmpty(schemaName))
                    SetSchemaName(schemaName);
            }

            IEnumerable<PropertyDescriptor> entityProperties = currentConventions
                .GetEntityProperties(EntityType);

            SqlMapper.ITypeMap entityMap = SqlMapper.GetTypeMap(typeof(TEntity));

            foreach (PropertyDescriptor propDescriptor in entityProperties)
            {
                var entityMember = entityMap.GetMember(propDescriptor.Name);

                PropertyMapping propMapping = SetPropertyByDescriptor(propDescriptor);
                if (entityMember != null)
                    propMapping.DatabaseColumnName = entityMember.ColumnName;

                currentConventions.ConfigureEntityPropertyMapping(propMapping);
            }
        }
    }
}